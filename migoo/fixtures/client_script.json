[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-17 13:40:21.122804",
  "module": "Migoo CRM",
  "name": "Create website item",
  "script": "frappe.ui.form.on('Item', {\n    after_save: function (frm) {\n        // alert(\"Hello\")\n        var a = frm.doc.equipment_for_sell;\n        var b = frm.doc.equipment_verify;\n        \n        var price=\"\"\n        \n        \n        \n\n        if (a == 1 && b == \"Verify\") {\n\n            frappe.call({\n                \"method\": \"check_web_item\",\n                args: {\n                    // doctype: \"Web item\"\n                    \"name\": frm.doc.name\n                },\n            }).then(records => {\n                console.log(records[\"data\"])\n                if (records[\"data\"] != frm.doc.name) {\n                    console.log(\"if\")\n\n                    var c = frm.doc.maker_model;\n                    var m = frm.doc.fitness_dt\n                    if (c == null) {\n                        // alert(\"null\")\n                        var d = \"g \";\n                    }\n                    else {\n                        // alert(\" Not null\")\n                        var d = c;\n                    }\n                    if (m == null) {\n                        // alert(\"null\")\n                        var n = \"m \";\n                    }\n                    else {\n                        // alert(\" Not null\")\n                        var n = m;\n                    }\n\n                    // alert(\"jo\");\n                    var name = cur_frm.doc.name;\n\n                    var item_group = cur_frm.doc.item_group;\n\n                    var sub = cur_frm.doc.equipment_main_category;\n                    var price = cur_frm.doc.standard_rate;\n\n                    var maker_model = maker_model;\n                    // alert(d)\n                    var vehicle_class = cur_frm.doc.vehicle_class;\n                    var owner_count = cur_frm.doc.owner_count;\n                    var insurance_date = cur_frm.doc.insurance_date;\n\n                    var fitness_dt = fitness_dt;\n                    // alert(fitness_dt)\n                    var manufacturing_date = cur_frm.doc.manufacturing_date;\n                    var registration_date = cur_frm.doc.registration_date;\n                    var model = cur_frm.doc.model;\n\n                    var equipment_condition = cur_frm.doc.equipment_condition;\n                    var equipment_current_reading = cur_frm.doc.equipment_current_reading;\n                    var short_description = cur_frm.doc.short_description;\n                    var description = cur_frm.doc.description;\n\n                    var location = cur_frm.doc.equipment_location;\n                    var img1 = frm.doc.right_picture;\n                    var img2 = frm.doc.front_picture;\n                    var img3 = frm.doc.back_picture;\n                    var img4 = frm.doc.right_picture;\n                    var img5 = frm.doc.engine_no;\n                    var img6 = frm.doc.chasis_no;\n                    if (vehicle_class == null) {\n                        var vehicle_class1 = '';\n                    }\n                    else {\n                        vehicle_class1 = vehicle_class\n                    }\n                    if (maker_model == null) {\n                        var maker_model1 = ''\n                    }\n                    else {\n                        maker_model1 = maker_model\n                    }\n                    if (owner_count == null) {\n                        var owner_count1 = ''\n                    }\n                    else {\n                        owner_count1 = owner_count\n                    }\n                    if (fitness_dt == null) {\n                        var fitness_dt1 = ''\n                    }\n                    else {\n                        fitness_dt1 = fitness_dt\n                    }\n                    if (insurance_date == null) {\n                        var insurance_date1 = ''\n                    }\n                    else {\n                        insurance_date1 = insurance_date\n                    }\n                    if (manufacturing_date == null) {\n                        var manufacturing_date1 = ''\n                    }\n                    else {\n                        manufacturing_date1 = manufacturing_date\n                    }\n                    if (registration_date == null) {\n                        var registration_date1 = ''\n                    }\n                    else {\n                        registration_date1 = registration_date\n                    }\n                    if (model == null) {\n                        var model1 = ''\n                    }\n                    else {\n                        model1 = model\n                    }\n\n\n                    frappe.call({\n                        method: \"website_item\",\n                        args: {\n                            'name': name,\n                            'item_group': item_group,\n                            'standard_rate': price,\n                            'maker_model': maker_model1,\n                            'vehicle_class': vehicle_class1,\n                            'owner_count': owner_count1,\n                            'model': model1, \n                            'sub': sub, \n                            'fitness_dt': fitness_dt1, \n                            'insurance_date': insurance_date1,\n                            'manufacturing_date': manufacturing_date1,\n                            'registration_date': registration_date1,\n                            'equipment_condition': equipment_condition,\n                            'equipment_current_reading': equipment_current_reading, \n                            'location': location, \n                            'short_description': short_description,\n                            'description': description, \n                            'img1': img1,\n                            'img2': img2, \n                            'img3': img3,\n                            \"img4\":img4,\n                            \"img5\":img5,\n                            \"img6\":img6,\n                        }\n\n                    });\n\n                }\n                else {\n                    \n                    if (cur_frm.doc.publish == 0) {\n                        frappe.call({\n                            \"method\":\"status_change\",\n                            args: {\n                            'name': frm.doc.name,\n                            'status': cur_frm.doc.publish,\n                            'price': cur_frm.doc.standard_rate,\n                            \"equipment_current_reading\":cur_frm.doc.equipment_current_reading,\n                            \n                            },\n                        })\n                        \n                        console.log(\"if if tesing\")\n                    }\n                    else{\n                        frappe.call({\n                            \"method\": \"status_change\",\n                            args: {\n                            'name': frm.doc.name,\n                            'status': cur_frm.doc.publish,\n                            'price': cur_frm.doc.standard_rate,\n                            \"equipment_current_reading\":frm.doc.equipment_current_reading,\n                            },\n                        })\n                        console.log(\"test else\")\n                    }\n                }\n            })\n\n        }\n       \n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Model",
  "enabled": 1,
  "modified": "2023-05-02 10:32:38.278396",
  "module": null,
  "name": "fetch child table",
  "script": "frappe.ui.form.on('Model', {\r\tequipment_sub_category:function(frm) {\t    \r\t\tvar u = frm.doc.equipment_sub_category;\r\t    frappe.call({\r\t        method:\"fetch_child_table\",\r\t        args:{\"no\":u},\r\t    }).then(records =>{\r\t        var parameters = records[\"parameter\"];\r\t        var parameter1 = parameters.split(\",\")\r\t        console.log(parameter1)\r\t   //     var item_code = item.split(\",\");\r\t        var len = parameter1.length;\r\t   //     var rate = records[\"rate\"];\r\t   //     var rate1 = rate.split(\",\");\t       \r\t        var child = frm.doc.item_details;\r\t        if(child === undefined)\r\t         {\r\t            for(var a = 0;a < len; a++){            \r\t                   var row = frappe.model.add_child(cur_frm.doc, \"Model\", \"item_details\");\r                \t         row.parameters = parameter1[a];\r                \t       //  row.qty = qty1[a];            \t        \r                \t         frm.refresh_fields(\"Category Detail\");\r\t              }\r\t         }\r\t    });\r}\r});\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Log Sheet",
  "enabled": 1,
  "modified": "2023-04-20 12:42:04.727481",
  "module": "Data",
  "name": "Log Sheet Setting",
  "script": "frappe.ui.form.on('Working Details', {\n\tstart_time:function(frm) {\n\t   $.each(frm.doc.working_details || [], function (i, d) {\n// \t\talert(d.start_time)\n        var hours=0; \n        var minutes=0; \n        \n        // var seconds=0; \n        if(!(/^\\d{1,2}:\\d{1,2}$/.test(d.start_time)))\n        {\n       \t\talert(\"Please enter valid time format\");\n       \t   \n            d.start_time= \"00:00\"\n        }\n        else\n        {\n             if (d.start_time && d.end_time) \n            { \n                    // alevar ww = 0;\n            // var www = 0;rt(\"if\")\n                    var hour1 = d.start_time.split(':')[0]; \n                    var hour2 = d.end_time.split(':')[0]; \n                    var min1 = d.start_time.split(':')[1]; \n                    var min2 = d.end_time.split(':')[1]; \n                    // varvar ww = 0;\n            // var www = 0; sec1 = d.start_time.split(':')[2]; \n                    // var sec2 = d.end_time.split(':')[2]; \n                    var diff_hour = hour2 - hour1; \n                    var diff_min = min2 - min1; \n                    // var diff_sec = sec2 - sec1; \n                    if (diff_hour<0) \n                    { \n                        diff_hour+= 24; \n              var ww = 0;\n            var www = 0;       } \n                    if (diff_min<0) \n                    { \n                        diff_min+=60; \n                        diff_hour--; \n                    }\n                    if(diff_min>=60)\n                    { \n                        diff_min-=60; \n                        diff_hour++; \n                    } \n                    // if (diff_sec<0) \n                    // { \n                    //     diff_sec+=60; \n                    //     diff_min--; \n                    // } \n                    // else if(diff_sec>=60)\n                    // { \n                    //     diff_sec-=60; \n                    //     diff_min++; \n                    // } \n                    d.total_time = diff_hour+\":\"+diff_min\n                    // alert(d.total_time)\n                \n                    // frappe.model.set_value(cdt,cdn,\"total_time\",diff_hour+\":\"+diff_min+\":\"+diff_sec); \n                    frm.refresh_field(\"working_details\"); \n                } \n        }\n\t\t})\n\t},\n\tend_time:function(frm) {\n\t   // alert(\"rjjt\")\n\t\t$.each(frm.doc.working_details || [], function (i, d) {\n// \t\talert(d.start_time)\n        var hours=0; \n        var minutes=0; \n        var seconds=0; \n        \n        \n         if(!(/^\\d{1,2}:\\d{1,2}$/.test(d.end_time)))\n        {\n       \t\talert(\"Please enter valid time format\");\n       \t    d.end_time= \"00:00\"\n        }\n        else\n        {\n            if (d.start_time && d.end_time) \n            { \n                // alert(\"if\")\n                var hour1 = d.start_time.split(':')[0]; \n                var hour2 = d.end_time.split(':')[0]; \n                var min1 = d.start_time.split(':')[1]; \n                var min2 = d.end_time.split(':')[1]; \n                // var sec1 = d.start_time.split(':')[2]; \n                // var sec2 = d.end_time.split(':')[2]; \n                var diff_hour = hour2 - hour1; \n                var diff_min = min2 - min1; \n                // var diff_sec = sec2 - sec1; \n                if (diff_hour<0) \n                { \n                    diff_hour+= 24; \n                } \n                if (diff_min<0) \n                { \n                    diff_min+=60; \n                    diff_hour--; \n                }\n                if(diff_min>=60)\n                { \n                    diff_min-=60; \n                    diff_hour++; \n                } \n                // if (diff_sec<0) \n                // { \n                //     diff_sec+=60; \n                //     diff_min--; \n                // } \n                // else if(diff_sec>=60)\n                // { \n                //     diff_sec-=60; \n                //     diff_min++; \n                // } \n                d.total_time = diff_hour+\":\"+diff_min\n                // alert(d.total_time)\n            \n                // frappe.model.set_value(cdt,cdn,\"total_time\",diff_hour+\":\"+diff_min+\":\"+diff_sec); \n                frm.refresh_field(\"working_details\"); \n            }\n        }\n\t\t})\n\t},\n\tstart_km:function(frm) {\n\t    $.each(frm.doc.working_details || [], function (i, d) {\n\t\tvar a = d.start_km\n\t\tvar b = d.end_km\n\t\tvar c = b - a;\n\t\tif(d.end_km!=\"\"){\n\t\tif(a>b){\n\t\t    alert(\"Please enter proper values\")\n\t\t    validated=false\n\t\t}\n\t\telse{\n\t\td.total_km=c;\n\t\t frm.refresh_field(\"working_details\"); \n\t\t}\n\t\t}\n\t    })\n\t},\n\t\tend_km:function(frm) {\n\t\t    $.each(frm.doc.working_details || [], function (i, d) {\n\t\tvar a = d.start_km\n\t\tvar b = d.end_km\n\t\tvar c = b - a;\n\t\t\n\t\tif(a>b){\n\t\t    alert(\"Please enter proper values\")\n\t\t    validated=false\n\t\t}\n\t\telse{\n\t\td.total_km=c;\n\t\t frm.refresh_field(\"working_details\"); \n\t\t\n\t\t}\n\t\t    })\n\t}\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Compliance Update",
  "enabled": 1,
  "modified": "2023-03-24 10:38:26.750035",
  "module": null,
  "name": "compliance update set equipment name",
  "script": "frappe.ui.form.on('Compliance Update', {\n\tonload:function(frm) {\n\t\t// your code here\n\t\tvar equipment_name = localStorage.getItem(\"equipment\")\n\t\tfrm.set_value('equipment',equipment_name)\n\t\tlocalStorage.removeItem(\"equipment\")\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 0,
  "modified": "2023-03-14 18:25:30.877999",
  "module": "Migoo CRM",
  "name": "Call Button CSS",
  "script": "frappe.ui.form.on('Opportunity', {\n\tonload(frm) {\n\t\t// your code here\n\t\tconsole.log(\"hello\")\n\t    var element = document.querySelectorAll(\".form-section\")[8];\n\t\telement.classList.add(\"section-no1\");\n\t\t// your code here\n\t\tset_css(frm);\n\t}\n})\nfunction set_css(frm){\n\tconsole.log(\"set_css\");\n    // document.querySelectorAll(\"[data-fieldname = 'call4']\")[0].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname = 'call4']\")[1].style.color = '#fff'\n// \tdocument.querySelectorAll(\"[data-fieldname='phone']\")[1].style.marginRight =\"10px\"\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.backgroundColor = '#0275d8'\n\t// document.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.backgroundColor = 'pink'\n\tdocument.querySelectorAll(\"[data-fieldname = 'call1']\")[1].style.color = '#fff'\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname = 'call2']\")[1].style.color = '#fff'\n\t\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname = 'call3']\")[1].style.color = '#fff'\n\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[0].style.marginBottom = '-32px';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[0].style.width = '75%';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[1].style.display = 'flex';\n\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[2].style.marginBottom = '-32px';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[2].style.width = '75%';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[3].style.display = 'flex';\n\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[4].style.marginBottom = '-32px';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[4].style.width = '75%';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[5].style.display = 'flex';\n\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[6].style.marginBottom = '-32px';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[6].style.width = '75%';\n\tdocument.querySelectorAll(\".section-no1 .frappe-control\")[7].style.display = 'flex';\n\n\n\t$(\".section-no1 .control-input\").css(\"width\",\"80%\")\t\n\t$(\".section-no1 .control-input\").css(\"float\",\"left\")\t\n\t$(\".section-no1 .control-input\").css(\"margin-right\",\"20px\")\t\n\tconsole.log(\"hello end css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Expo Offers",
  "enabled": 1,
  "modified": "2023-03-14 18:25:30.894954",
  "module": "Migoo CRM",
  "name": "Expo Offers",
  "script": "frappe.ui.form.on('Expo Offers', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    \n\t   \n    },\n    before_save:function(frm){\n        if (frm.doc.equipment_category == null){\n            frm.set_value('category', frm.doc.equipment_sub_category)\n            \n        }\n        else{\n            frm.set_value(\"category\", frm.doc.equipment_category)\n        }\n    },\n    equipment_sub_category:function(frm){\n\t    var category=cur_frm.doc.equipment_sub_category;\n\t     frappe.call({\n        \t  method:\"model_no\", \n        \t\t  args:{'category':category},\n        \t\t  }).then(records => {\n                // alert(records[\"message\"]);\n                var category1 = records[\"message\"];\n               \n                if(category1 > 0){\n                    // alert(\"if\")\n                    //  frm.set_df_property(\"equipment_category\", \"hidden\",0);\n                     frm.set_query('equipment_category', function(doc, cdt, cdn) {\n                        let d = locals[cdt][cdn];\n                        return{\n            \t\t\t\tfilters: {\n            \t\t\t\t    'parent_item_group': d.equipment_sub_category,\n            \t\t\t\t    \n            \t\t\t\t}\n                        };\n            \t    });\n                    \n                }\n                else{\n                    // alert(\"else\")\n                     cur_frm.set_df_property(\"equipment_category\", \"hidden\",1);\n                }\n    \t\t })\n\t\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-04-15 12:00:03.095347",
  "module": "Migoo CRM",
  "name": "Create Web Item",
  "script": "frappe.ui.form.on('Item',\n    {\n        after_save: function (frm) {\n            // alert(\"Hello\") \n            var a = frm.doc.equipment_for_sell;\n            var b = frm.doc.equipment_verify;\n            var c = frm.doc.publish;\n            var reg = frm.doc.rto_register;\n            var price = \"\";\n            var images = \"\";\n            $.each(frm.doc.images, function (i, d) { // images.append(d.image) \n                if (images == \"\") {\n                    images = d.equipment_img\n                }\n                else {\n                    images = images + \",\" + d.equipment_img\n                }\n                // console.log(d.equipment_img) \n                console.log(images)\n            }); // alert(images) \n            if (a == 1 && b == \"Verify\") {\n                frappe.call({\n                    \"method\": \"check_web_item\",\n                    args:\n                    {\n                        doctype: \"Web item\",\n                        \"name\": frm.doc.name\n                    },\n                }).then(records => {\n                    console.log(records[\"data\"])\n                    if (records[\"data\"] != frm.doc.name) {\n                        console.log(\"if\")\n                        if (frm.doc.publish == 1) {\n                            // alert(\"jo\"); \n                            var name = cur_frm.doc.name;\n                            var item_group = cur_frm.doc.item_group;\n                            var sub = cur_frm.doc.equipment_main_category;\n                            var price = cur_frm.doc.standard_rate;\n                            var maker_model = frm.doc.maker_model;\n                            // alert(d) \n                            var vehicle_class = cur_frm.doc.vehicle_class;\n                            var owner_count = cur_frm.doc.owner_count;\n                            var insurance_date = cur_frm.doc.insurance_date;\n                            var fitness_dt = frm.doc.fitness_dt;\n                            // alequipment_verifyert(fitness_dt) \n                            var manufacturing_date = cur_frm.doc.manufacturing_date;\n                            var registration_date = cur_frm.doc.registration_date;\n                            // Error comes here when slipt is applied\n                            // var model = cur_frm.doc.model.split(\"/\")[0];\n                            var model = cur_frm.doc.model;\n                            var equipment_condition = cur_frm.doc.equipment_condition;\n                            var equipment_current_reading = cur_frm.doc.equipment_current_reading;\n                            var short_description = cur_frm.doc.short_description;\n                            var description = cur_frm.doc.description;\n                            var supplier = frm.doc.supplier;\n                            var supplier_number = frm.doc.supplier_number;\n                            var fuel_type = frm.doc.fuel_type;\n                            var engine = frm.doc.engine;\n                            var vehicle_weight = frm.doc.vehicle_weight;\n                            var location = cur_frm.doc.equipment_location;\n                            var img1 = frm.doc.front_picture;\n                            var equipment_brand = frm.doc.equipment_brand;\n                            var equipment_manufacturing_year = frm.doc.equipment_manufacturing_year;\n                            var equipment_model_no = frm.doc.equipment_model_no;\n                            var equipment_insurance = frm.doc.equipment_insurance;\n                            var finance = frm.doc.finance;\n                            if (vehicle_class == null) {\n                                var vehicle_class1 = '';\n                            }\n                            else {\n                                vehicle_class1 = vehicle_class\n                            }\n                            if (maker_model == null) {\n                                var maker_model1 = ''\n                            }\n                            else {\n                                maker_model1 = maker_model\n                            }\n                            if (owner_count == null) {\n                                var owner_count1 = ''\n                            }\n                            else {\n                                owner_count1 = owner_count\n                            }\n                            if (fitness_dt == null) { var fitness_dt1 = '' }\n                            else { fitness_dt1 = fitness_dt }\n                            if (insurance_date == null) { var insurance_date1 = '' }\n                            else { insurance_date1 = insurance_date }\n                            if (manufacturing_date == null) { var manufacturing_date1 = '' }\n                            else { manufacturing_date1 = manufacturing_date }\n                            if (registration_date == null) { var registration_date1 = '' }\n                            else { registration_date1 = registration_date }\n                            if (model == null) { var model1 = '' }\n                            else { model1 = model }\n                            if (img1 == null) { var img11 = '' }\n                            else { img11 = img1 }\n                            if (reg == \"Registered\") { // alert(\"elsee elseeee\") \n                                frappe.call({\n                                    method: \"website_item\",\n                                    args: {\n                                        'name': name,\n                                        'item_group': item_group,\n                                        'standard_rate': price,\n                                        'makermodel': maker_model1,\n                                        'vehicle_class': vehicle_class1,\n                                        'owner_count': owner_count1,\n                                        'model': model1,\n                                        'sub': sub,\n                                        'fitness_dt': fitness_dt1,\n                                        'insurance_date': insurance_date1,\n                                        'manufacturing_date': manufacturing_date1,\n                                        'registration_date': registration_date1,\n                                        'equipment_condition': equipment_condition,\n                                        'equipment_current_reading': equipment_current_reading,\n                                        'location': location,\n                                        'short_description': short_description,\n                                        'description': description,\n                                        'supplier': supplier,\n                                        'supplier_number': supplier_number,\n                                        'supplier_company': frm.doc.supplier_company,\n                                        'fuel_type': fuel_type,\n                                        'engine': engine,\n                                        'vehicle_weight': vehicle_weight,\n                                        'img1': img11,\n                                        \"img2\":frm.doc.back_picture,\n                                        \"img3\":frm.doc.engine_no,\n                                        \"img4\":frm.doc.right_picture,\n                                        \"img5\":frm.doc.left_picture,\n                                        \"img6\":frm.doc.chasis_no,\n                                        \"test\": images,\n                                    }\n                                });\n                            }\n                            else { // alert(\"else\") \n                                frappe.call({\n                                    method: \"website_item2\",\n                                    args: {\n                                        'name': name, 'item_group': item_group, 'standard_rate': price,\n                                        // 'makermodel': maker_model1, \n                                        // 'vehicle_class': vehicle_class1, \n                                        // 'owner_count': owner_count1, \n                                        // 'model': model1, \n                                        'brand': equipment_brand,\n                                        'sub': sub,\n                                        'finance': finance,\n                                        'equipment_insurance': equipment_insurance,\n                                        'equipment_manufacturing_year': equipment_manufacturing_year,\n                                        'equipment_model_no': equipment_model_no,\n                                        'equipment_condition': equipment_condition,\n                                        'equipment_current_reading': equipment_current_reading,\n                                        'location': location,\n                                        'short_description': short_description,\n                                        'description': description,\n                                        'supplier': supplier,\n                                        'supplier_number': supplier_number,\n                                        'supplier_company': frm.doc.supplier_company,\n                                        'img1': img11,\n                                        \"img2\":frm.doc.back_picture,\n                                        \"img3\":frm.doc.engine_no,\n                                        \"img4\":frm.doc.right_picture,\n                                        \"img5\":frm.doc.left_picture,\n                                        \"img6\":frm.doc.chasis_no, \n                                        \"test\": images,\n                                    }\n                                });\n                            }\n                        }\n                    } else {\n                        if (cur_frm.doc.publish == 0) {\n                            frappe.call({\n                                \"method\": \"migoo_crm.code_override.image_update.status_change\",\n                                args: {\n                                    'name': frm.doc.name,\n                                    'status': cur_frm.doc.publish,\n                                    'price': cur_frm.doc.standard_rate,\n                                    \"equipment_current_reading\": cur_frm.doc.equipment_current_reading,\n                                    \"test\": images,\n                                    'img1': frm.doc.front_picture,\n                                    \"img2\":frm.doc.back_picture,\n                                    \"img3\":frm.doc.engine_no,\n                                    \"img4\":frm.doc.right_picture,\n                                    \"img5\":frm.doc.left_picture,\n                                    \"img6\":frm.doc.chasis_no,\n                                    \"sold_out\":frm.doc.sold_out\n                                },\n                            })\n                            console.log(\"if if tesing\")\n                        }\n                        else {\n                            frappe.call({\n                                \"method\": \"migoo_crm.code_override.image_update.status_change\",\n                                args: {\n                                    'name': frm.doc.name,\n                                    'status': cur_frm.doc.publish,\n                                    'price': cur_frm.doc.standard_rate,\n                                    \"equipment_current_reading\": frm.doc.equipment_current_reading,\n                                    \"test\": images, \n                                    'img1': frm.doc.front_picture,\n                                    \"img2\":frm.doc.back_picture,\n                                    \"img3\":frm.doc.engine_no,\n                                    \"img4\":frm.doc.right_picture,\n                                    \"img5\":frm.doc.left_picture,\n                                    \"img6\":frm.doc.chasis_no,\n                                    \"sold_out\":frm.doc.sold_out \n                                },\n                            })\n                        }\n                    }\n                })\n            }\n        }\n    });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.286686",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Customer List",
  "script": "frappe.listview_settings['Customer'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Customer'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Customer',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.298216",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Customer",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Customer', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Customer'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.308502",
  "module": "Migoo CRM",
  "name": "Equipment Filter",
  "script": "frappe.listview_settings['Item'] = {\n\tadd_fields: [\"item_name\", \"stock_uom\", \"item_group\", \"image\", \"variant_of\",\n\t\t\"has_variants\", \"end_of_life\"],\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:30.865051",
  "module": "Migoo CRM",
  "name": "Delete Equipment",
  "script": "frappe.ui.form.on(\"Item\", \"refresh\", function(frm) {\n  frm.add_custom_button(__(\"Delete Equipment\"), function() {\n    var selected_items = frm.doc.name;\n    var a=selected_items.length\n    // alert(a)\n\n    frappe.confirm(__(\"Are you sure you want to delete the selected items?\"), function() {\n        \n       \n\n         frappe.call({\n                            \"method\":\"status_change\",\n                            args: {\n                            'name': frm.doc.name,\n                            'status':0,\n                            'price': cur_frm.doc.standard_rate,\n                            \"equipment_current_reading\":cur_frm.doc.equipment_current_reading,\n                            \n                            },\n                        }).then(records => {\n        // alert(\"hii\")\n        //  frappe.delete_doc('Web item', frm.doc.name)\n              var delete_promises = [];\n            //   for (var i = 0; i < selected_items.length; i++) {\n               \n                \n                var delete_promise = frappe.call({\n                  method: \"migoo_crm.code_override.delete_doc.delete_doc\",\n                  args: {\n                    \"doctype\": frm.doctype,\n                    \"name\": selected_items\n                  }\n                });\n                delete_promises.push(delete_promise);\n            //   }\n        \n              Promise.all(delete_promises).then(function() {\n                \n                var delete_promise = frappe.call({\n                  method: \"migoo_crm.code_override.delete_doc.delete_doc\",\n                  args: {\n                    \"doctype\": \"Web item\",\n                    \"name\": selected_items\n                  }\n                });\n                delete_promises.push(delete_promise);\n                frappe.set_route(\"List\", \"Item\");\n                frappe.msgprint(\"Your Equipment Successfully Deleted\")\n        \n              });\n            });\n    });\n  });\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.064295",
  "module": "Migoo CRM",
  "name": "Raw Data ListView Button",
  "script": "frappe.listview_settings['Raw Data'] = {\n    onload: function (listview) {\n        listview.page.add_action_item(\"Send Whatsapp Template\", function () {\n            test(listview);\n        });;\n    },\n};\nfunction test(listview) {\n    let names = [];\n    $.each(listview.get_checked_items(), function (key, value) {\n        names.push(value.name);\n    });\n    if (names.length === 0) {\n        frappe.throw(__(\"No rows selected.\"));\n    }\n\n    template = [];\n    frappe.call({\n        method: 'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n        args: {\n            'doctype': 'Opportunity'\n        },\n        freeze: true,\n        callback: (r) => {\n            for (let i = 0; i < r.message.length; i++) {\n                template.push(r.message[i])\n            }\n            template.append[\"new add\"]\n        },\n        error: (r) => {\n            frappe.msgprint('somthing want wrong!');\n        }\n    });\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n            },\n            {\n                label: 'Select Template',\n                fieldname: 'select_template',\n                fieldtype: 'Select',\n                options: template,\n                depends_on: \"eval:(doc.select_message_type == 'Template')\"\n            }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n            frappe.call({\n                method: 'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                args: {\n                    'template_name': values['select_template'],\n                    'doctype': 'Opportunity',\n                    'name': names\n                },\n                freeze: true,\n                callback: (r) => {\n                    frappe.msgprint('message sent');\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n            });\n            d1.hide();\n        }\n\n    });\n    d1.show();\n\n    console.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.215530",
  "module": "Migoo CRM",
  "name": "Raw Data-Full Name",
  "script": "frappe.ui.form.on('Raw Data',  \"first_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"middle_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})\nfrappe.ui.form.on('Raw Data', \"last_name\", function(frm){\n\tfrm.set_value(\"full_name\", strip(frm.doc.first_name + \" \" + frm.doc.middle_name + \" \" + frm.doc.last_name));\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-22 18:07:09.510751",
  "module": "Migoo CRM",
  "name": "Supplier Form Setting",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh(frm) {\n\t\t$(\".form-shared\").hide();\n\t\t$(\".form-tags\").hide();\n\t\t$(\".form-sidebar-stats\").hide();\n\t\t// \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n// \t\t frm.remove_custom_button('Create_User'); \nvar email=frm.doc.email\nif (email !=null){\n        frappe.call({\n            \"method\": \"check_user\",\n             args: {\n             \"email\": email\n            }\n        }).then(records => {\n                var a = records[\"msg\"]\n                // alert(a)\n                if(a!=\"\"){\n                     frm.remove_custom_button('Create_User'); \n                }\n                \n                \n        })\n}\n\t\tif (frappe.user.has_role(\"Migoo Approver\") === true) {\n\t\t\tconsole.log(\"Migoo Approver\");\n\t\t\tfrm.add_custom_button(__('Create_User'),\n\t\t\t\tfunction () {\n\t\t\t\t\tfrappe.new_doc(\"User\",\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"username\": frm.doc.email,\n\t\t\t\t\t\t\t\"first_name\": frm.doc.supplier_name,\n\t\t\t\t\t\t\t\"role_profile_name\": \"Vendor\",\n\t\t\t\t\t\t\t\"module_profile\": \"Vendor\",\n\t\t\t\t\t\t\t\"middle_name\": frm.doc.name,\n\t\t\t\t\t\t\t\"mobile_no\": frm.doc.mobile_number,\n\t\t\t\t\t\t\t\"phone\": frm.doc.phone_no,\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"Vendor\") === true) {\n\t\t\tcur_frm.set_df_property(\"verify\", \"hidden\", 1);\n\t\t\t$(\".form-assignments\").hide();\n\t\t\t$(\".form-attachments\").hide();\n\t\t\t$(\".form-shared\").hide();\n\t\t\t$(\".form-tags\").hide();\n\t\t\t$(\".form-sidebar-stats\").hide();\n\t\t\t\n\t\t\tfrm.remove_custom_button('Send Whatsapp Message'); \n\t\t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n\t\t}\n\t\telse {\n\t\t\tcur_frm.set_df_property(\"verify\", \"hidden\", 0);\n\t\t}\n\t\t// $(\".form-assignments\").hide();\n\t\t// \t\t$(\".form-attachments\").hide();\n\t\tif (frappe.user.has_role(\"Vendor\") === false) {\n\t\t\tfrm.add_custom_button(__('Equipment'),\n\t\t\t\tfunction () {\n\n\t\t\t\t\tfrappe.new_doc(\"Item\", {\n\t\t\t\t\t\t\"supplier\": frm.doc.name,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t}\n\t},\n\n\n\tbefore_save: function (frm) {\n\t\tif (cur_frm.doc.verify == \"Not Verify\") {\n\t\t\tcur_frm.set_value(\"disabled\", 1);\n\t\t\tcur_frm.set_df_property(\"disabled\", \"read_only\", 1);\n\t\t}\n\n\t\tif (cur_frm.doc.verify == \"Verify\") {\n\t\t\t// cur_frm.set_value(\"disabled\",\"\");\n\t\t\tcur_frm.set_df_property(\"disabled\", \"read_only\", 0);\n\t\t}\n\n\t\tvar nm = frm.doc.name_of_suppier\n\t\tcur_frm.set_value(\"supplier_name\", nm)\n\t\t// alert(frm.doc.supplier_name)\n\n\t\tif (frappe.user.has_role(\"Vendor\") === true) {\n\t\t\tfrm.set_value(\"verify\", \"Not Verify\")\n\t\t}\n\t\telse {\n\t\t\tfrm.set_value(\"verify\", \"Verify\")\n\t\t}\n\t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.024616",
  "module": "Migoo CRM",
  "name": "Supplier Button Hide",
  "script": "frappe.ui.form.on('Supplier', {\n\trefresh:function(frm) {\n\n\t   if(frappe.user.has_role(\"Vendor\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t        frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else  if(frappe.user.has_role(\"Migoo Approver\") === true)\n\t     {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Accounting Ledger',\"View\"); \n\t        frm.remove_custom_button('Accounts Payable',\"View\"); \n\t        frm.remove_custom_button('Bank Account',\"Create\"); \n\t        frm.remove_custom_button('Pricing Rule',\"Create\"); \n\t        frm.remove_custom_button('enable_common_party_accounting',\"Actions\"); \n\t       // frm.remove_custom_button('Get Supplier Group Details',\"Actions\"); \n\t         },0);  \n\t    }\n\t    else{\n\t        frm.add_custom_button(__('Accounting Ledger'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'General Ledger',\n\t\t\t\t\t{ party_type: 'Supplier', party: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Accounts Payable'), function () {\n\t\t\t\tfrappe.set_route('query-report', 'Accounts Payable', { supplier: frm.doc.name });\n\t\t\t}, __(\"View\"));\n\n\t\t\tfrm.add_custom_button(__('Bank Account'), function () {\n\t\t\t\terpnext.utils.make_bank_account(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Pricing Rule'), function () {\n\t\t\t\terpnext.utils.make_pricing_rule(frm.doc.doctype, frm.doc.name);\n\t\t\t}, __('Create'));\n\n\t\t\tfrm.add_custom_button(__('Get Supplier Group Details'), function () {\n\t\t\t\tfrm.trigger(\"get_supplier_group_details\");\n\t\t\t}, __('Actions'));\n\t    }\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.014875",
  "module": "Migoo CRM",
  "name": "Supplier List View",
  "script": "frappe.listview_settings['Supplier'] = {\n\tget_indicator: function(doc) {\n\t\tvar indicator = [(doc.verify), frappe.utils.guess_colour(doc.verify), \"verify,=,\" + doc.verify];\n\t\tif(doc.verify==\"Verify\") \n\t\t{\n\t\t\tindicator[1] = \"green\";\n\t\t}\n\t\tif(doc.verify==\"Not Verify\") \n\t\t{\n\t\t\tindicator[1] = \"red\";\n\t\t}\n\t\treturn indicator;\n\t},\n\tonload:function(doc) \n\t{\n\t    if(frappe.user.has_role(\"Vendor\") === true){\n\t        \n\t        $('.btn-primary').hide();\n\t    }    \n\t},\n\trefresh: function(listview) {\n\t    if (frappe.user.has_role(\"Vendor\")===true){\n    \t    $(\".btn-primary\").hide();\n\t    }\n\t}\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.192758",
  "module": "Migoo CRM",
  "name": "User Email Set",
  "script": "frappe.ui.form.on('User', {\n    \tonload:function(frm) \n\t\t{\n    \t    var a = frm.doc.username;\n    \t    frm.set_value(\"email\",a);\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \trefresh:function(frm){\n    \t    cur_frm.set_df_property(\"middle_name\", \"hidden\",1);\n    \t},\n    \temail:function(frm) \n    \t{\n\t    frm.set_value(\"username\", frm.doc.email);\n    \t    \n    \t},\n    \tafter_save:function(frm)\n    \t{\n    \t    console.log(\"aa\");\n    \t    if(frm.doc.middle_name != null)\n    \t\t{\n    \t\t  \n    \t\t  var user= cur_frm.doc.email;\n    \t\t  var supplier= cur_frm.doc.middle_name;  \n    \t\t  frappe.call({\n        \t  method:\"supplier\", \n        \t\t  args:{'user':user,\"supplier\":supplier},\n        \t\t  });\n    \t\t}\n    \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-22 12:04:46.626545",
  "module": "Migoo CRM",
  "name": "Item Form Setting",
  "script": "frappe.ui.form.on('Item', {\r\r\trefresh(frm) \r\t{\r\t    $(\".form-shared\").hide();\r\t\t$(\".form-tags\").hide();\r\t\t$(\".form-sidebar-stats\").hide();\r\t\tfrm.remove_custom_button('Duplicate');\r\t    frm.remove_custom_button('Add / Edit Prices', \"Actions\"); \r\t    frm.remove_custom_button('Publish in Website',\"Actions\");\r\t    frm.remove_custom_button('Website Item', \"View\"); \r\t\tif (frappe.user_roles.indexOf(\"Vendor\") == '0')\r\t\t{\t       \r    \t   \t$(\".form-assignments\").hide();\r    \t   \t$(\".form-shared\").hide();\r    \t\t$(\".form-tags\").hide();\r    \t\t$(\".form-sidebar-stats\").hide();\r    \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\r    \t\t$('.icon-btn').hide();\r\r\t    }\r\t    \r\t   if (cur_frm.doc.equipment_verify == \"Not Verify\")\r        {\r            \r        }\r        else\r        {\r             cur_frm.set_df_property(\"disabled\", \"read_only\",0);\r        }\r\t    if(frappe.user.has_role(\"Vendor\") === true)\r\t     {\r\t        \r\t         cur_frm.set_df_property(\"equipment_verify\", \"read_only\",1);\r\t          setTimeout(() => {\r    \t        console.log(\"View Hide\");\r    \t        frm.remove_custom_button('Duplicate');\r    \t         \r    \t        \r    \t        frm.remove_custom_button('...');\r    \t        frm.remove_custom_button('Create Website Item')\r\t        \r\t         },0);  \r\t    }\r\t},\r// \tequipment_main_category:function(frm,cdt,cdn) {\r// \t    var a =frm.doc.equipment_main_category;\r// \t     cur_frm.set_query(\"equipment_brand\", function() {\r//              return {\r//                         \"filters\": {\r//                           \"item_group_name\": a,\r//                         }\r                        \r//                     };\r// \t    });\r// \t},\r\tonload:function(frm) \r\t{\r\t   frm.remove_custom_button('Duplicate');\r\t    frm.remove_custom_button('Add / Edit Prices', \"Actions\"); \r\t    frm.remove_custom_button('Publish in Website',\"Actions\");\r\t    frm.remove_custom_button('Website Item', \"View\"); \r\t   // frm.remove_custom_button('Publish in Website',\"Actions\");\r    },\r    register_no:function(frm){\r        var register_no= frm.doc.register_no;\r        \r        frappe.call({\r                method: \"check_register_no\",\r                args: {\r                    \"register_no\": register_no,\r                    // \"email\": \"\",\r                },\r            }).then(records => {\r                var a = records[\"msg\"]\r                if (a != \"\") {\r                     cur_frm.set_df_property(\"fetch_data\", \"hidden\",1);\r                    frappe.msgprint(\"RTO Registration Number Must me Uniqe\")\r                }\r            })\r    },\r    before_save:function(frm){\r        var register_no= frm.doc.register_no;\r        \r        frappe.call({\r                method: \"check_register_no\",\r                args: {\r                    \"register_no\": register_no,\r                    // \"email\": \"\",\r                },\r            }).then(records => {\r                var a = records[\"msg\"]\r                if (a != \"\") {\r                     cur_frm.set_df_property(\"fetch_data\", \"hidden\",1);\r                     validated=false\r                    // frappe.msgprint(\"RTO Registration Number Must me Uniqe\")\r                }\r            })\r    }\r});\r\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-20 11:33:57.030542",
  "module": "Migoo CRM",
  "name": "Equipment List Setting",
  "script": "frappe.listview_settings['Item'] = {\n\tonload:function(frm) {\n\t    $('#help-links').hide();\n\t},\n// \tget_indicator: function(doc) {\n// \t\tvar indicator = [(doc.equipment_status), frappe.utils.guess_colour(doc.equipment_status), \"equipment_status,=,\" + doc.equipment_status];\n// \t\tif(doc.equipment_status==\"Working\") \n// \t\t{\n// \t\t\tindicator[1] = \"green\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Breakdown\") \n// \t\t{\n// \t\t\tindicator[1] = \"red\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Ideal\") \n// \t\t{\n// \t\t\tindicator[1] = \"blue\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied With Migoo\") \n// \t\t{\n// \t\t\tindicator[1] = \"cyan\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Occupied with Others\") \n// \t\t{\n// \t\t\tindicator[1] = \"orange\";\n// \t\t}\n// \t\tif(doc.equipment_status==\"Free\") \n// \t\t{\n// \t\t\tindicator[1] = \"yellow\";\n// \t\t}\n\n// \t\treturn indicator;\n// \t}\n    get_indicator: function(doc) {\n    \t\tvar indicator = [(doc.equipment_verify), frappe.utils.guess_colour(doc.equipment_verify), \"equipment_verify,=,\" + doc.equipment_verify];\n    \t\tif(doc.equipment_verify==\"Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"green\";\n    \t\t}\n    \t\tif(doc.equipment_verify==\"Not Verify\") \n    \t\t{\n    \t\t\tindicator[1] = \"red\";\n    \t\t}\n    \t\treturn indicator;\n    \t},\n\t     \n// \trefresh:function(doc)\n// \t{    $(\".sidebar-toggle-placeholder\").hide(\"sidebar-toggle-btn\")\n//         $(\".layout-side-section\").hide();\n//     \t$(\".layout-main-section-wrapper\").addClass(\"col-12\"); // this removes class \"col-md-10\" from content block, which sets width to 83%\n    \t \n// \t}\n\n\t\n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-03-21 16:56:39.378090",
  "module": "Migoo CRM",
  "name": "Lead Address",
  "script": "frappe.ui.form.on('Lead', {\n    after_save: function (frm) {\n        var name = cur_frm.doc.name;\n        var address_title = cur_frm.doc.name;\n        var address_line11 = cur_frm.doc.address_line_1;\n        // var address_line12 = cur_frm.doc.address_line_2;\n        // var area1 = cur_frm.doc.area;\n        var city1 = cur_frm.doc.city;\n        var state1 = cur_frm.doc.state_name;\n        var postal_code1 = cur_frm.doc.postal_code;\n        if (address_line11 == null) {\n            var address_line1 = \"\";\n        }\n        else {\n            address_line1 = address_line11\n        }\n        if (city1 == null) {\n            var city = \"\";\n        }\n        else {\n            city = city1\n        }\n        if (state1 == null) {\n            var state = \"\";\n        }\n        else {\n            state = state1\n        }\n        if (postal_code1 == null) {\n            var postal_code = \"\";\n        }\n        else {\n            postal_code = postal_code1\n        }\n        if (address_line1 != \"\")\n        {\n            //  alert(address_line1)\n\n            frappe.call({\n                method: \"check_address_lead\",\n                args: { \"name\": name },\n            }).then(records => {\n                var a = records[\"msg\"]\n                //  alert(a + \"  masg\")\n\n                if (a == \"\") \n                {\n                    frappe.call({\n                        method: \"address\",\n                        args: { 'address_title': address_title, \"address_line1\": address_line1, \"city\": city, \"state\": state, \"postal_code\": postal_code, \"name\": name,},\n                    });\n                }\n                else{\n                    \n                    // frappe.msgprint(\"test else\" + a)\n                    frappe.call({\n                        method: \"migoo_crm.code_override.image_update.address_update\",\n                        args: { \"address_line1\": address_line1, \"city\": city, \"state\": state, \"postal_code\": postal_code,  \"name\": name},\n                    }).then(records => {\n                        var a = records[\"msg\"]\n                        // frappe.msgprint(a)\n                    })\n                }\n                frm.refresh();\n            })\n            \n        }\n        \n    },\n    whatsapp_no: function (frm) {\n        var whatsapp_no = frm.doc.whatsapp_no;\n        var len = whatsapp_no.length\n        // alert(len)\n        if (len == 10) {\n\n\n            frappe.call({\n                method: \"check_whatsapp_no\",\n                args: {\n                    \"whatsapp_no\": whatsapp_no,\n                    \"email\": \"\",\n                },\n            }).then(records => {\n                var a = records[\"msg\"]\n                if (a != \"\") {\n                    frappe.msgprint(\"Whatsapp Number Must me Uniqe\",\"Error\")\n                }\n            })\n        }\n    },\n    email_id: function (frm) {\n        var email_id = frm.doc.email_id;\n        frappe.call({\n            method: \"check_whatsapp_no\",\n            args: {\n                \"whatsapp_no\": \"\",\n                \"email\": email_id,\n            },\n        }).then(records => {\n            var a = records[\"msg\"]\n            if (a != \"\") {\n                frappe.msgprint(\"Email Address Must Be Uniqe\",\"Error\")\n            }\n        })\n    }\n    , refresh: function (frm) {\n        $(\".document-link .icon-btn\").remove()\n        $(\".document-link .open-notification\").remove()\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.105892",
  "module": "Migoo CRM",
  "name": "Category Setting Item",
  "script": "frappe.ui.form.on('Item', {\n\trefresh:function(frm) {\n\t    cur_frm.set_query(\"item_group\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\": \"All Equipment Groups\",\n            }\n        };\n    });\n\t    frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.item_group,\n\t\t\t\t    // \"is_group\": \"1\",\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n   \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Brand",
  "enabled": 0,
  "modified": "2023-03-14 18:25:31.203920",
  "module": "Migoo CRM",
  "name": "Brand Filter",
  "script": "frappe.ui.form.on('Brand', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t     \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Model No",
  "enabled": 0,
  "modified": "2023-02-27 16:46:18.800334",
  "module": "Migoo CRM",
  "name": "Model No Filter",
  "script": "frappe.ui.form.on('Model No', {\n\trefresh(frm) {\n\t\t  frm.set_query('equipment_main_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': \"All Equipment Groups\",\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    frm.set_query('equipment_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_sub_category,\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t   \n    },\n    equipment_sub_category:function(frm){\n\t    var category=cur_frm.doc.equipment_sub_category;\n\t     frappe.call({\n        \t  method:\"model_no\", \n        \t\t  args:{'category':category},\n        \t\t  }).then(records => {\n                // alert(records[\"message\"]);\n                var category1 = records[\"message\"];\n               \n                if(category1 > 0){\n                    \n                     cur_frm.set_df_property(\"equipment_category\", \"hidden\",0);\n                    \n                }\n    \t\t })\n\t\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.034075",
  "module": "Migoo CRM",
  "name": "Caputal Register no",
  "script": "frappe.ui.form.on('Item', {\n\tregister_no:function(frm) {\n\t    if (cur_frm.doc.register_no !=\"\"){\n\t        name=cur_frm.doc.register_no\n\t        frappe.call({\n\t\t        method:\"name\", \n\t\t        args: {'name1':name},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                cur_frm.set_value(\"register_no\",name1)\n\t\t    });\n\t    }\n},\nequipment_model_no:function(frm) {\n\t    if (cur_frm.doc.equipment_model_no !=\"\"){\n\t        name=cur_frm.doc.equipment_model_no\n\t        frappe.call({\n\t\t        method:\"name\", \n\t\t        args: {'name1':name},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                cur_frm.set_value(\"equipment_model_no\",name1)\n\t\t    });\n\t    }\n}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.114994",
  "module": "Migoo CRM",
  "name": "Naming seies of equipment",
  "script": "frappe.ui.form.on('Item', {\n\t\tbefore_save:function(frm) {\n\t    \n\t\tif(cur_frm.doc.item_group==\"Aerial Work Platform\") {\n          \n            var a=\"AERI-.####\";\n           cur_frm.set_value(\"naming_series\", a);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Concrete Machinery\") {\n          \n            var b=\"CONC-.####\";\n           cur_frm.set_value(\"naming_series\", b);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Cranes\") {\n          \n            var c=\"CRAN-.####\";\n           cur_frm.set_value(\"naming_series\", c);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Earth Moving Machinery\") {\n          \n            var d=\"EART-.####\";\n           cur_frm.set_value(\"naming_series\", d);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Lifting and Handling Machinery\") {\n          \n            var f=\"LIFT-.####\";\n           cur_frm.set_value(\"naming_series\", f);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Miscellaneous\") {\n          \n            var g=\"MISC-.####\";\n           cur_frm.set_value(\"naming_series\", g);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Plant Crushing and Screening\") {\n          \n            var h=\"PLAN-.####\";\n           cur_frm.set_value(\"naming_series\", h);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Road Machinery\") {\n          \n            var i=\"ROAD-.####\";\n           cur_frm.set_value(\"naming_series\", i);\n\t\t}\n\t\tif(cur_frm.doc.item_group==\"Truck / Tanker / Trailor\") {\n          \n            var j=\"TRUC-.####\";\n           cur_frm.set_value(\"naming_series\", j);\n\t\t}\n      \t}\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.163917",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Lead",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Lead', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Lead'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.183208",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message for Supplier",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Supplier', {\n    refresh(frm) {\n        if(frm.doc.whatsapp_no){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp_no;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Supplier'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('message sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp_no']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp_no\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Inquiry Form",
  "enabled": 1,
  "modified": "2023-04-20 19:01:47.611197",
  "module": "Migoo CRM",
  "name": "Inquiry Form for CRM",
  "script": "frappe.ui.form.on('Inquiry Form', {\n  refresh(frm) {\n    $(\".document-link .icon-btn\").remove()\n    $(\".document-link .open-notification\").remove()\n    // your code here\n    var nm1=frm.doc.name\n    frm.add_custom_button(__('Lead'), function () {\n\n      var request = frm.doc.request;\n      var fname = frm.doc.first_name;\n      var lname = frm.doc.last_name;\n      var company = frm.doc.company_name;\n      var email = frm.doc.email_address;\n      var mobile = frm.doc.mobile_no;\n      var notes = frm.doc.supplier_notes;\n      var items = frm.doc.item_details;\n      var date = frm.doc.curdate\n      var wp = frm.doc.wpnumber\n      var inquiry_source = frm.doc.inquiry_source\n      var a = wp\n      var aa = items\n      var id = frm.doc.name\n      var equipment_id = frm.doc.equipment_name\n      alert(equipment_id)\n\n      if (a == null) {\n        // alert(\"null\")\n        var d = \"\";\n      }\n      else {\n        // alert(\" Not null\")\n        var d = a;\n      }\n      if (aa == null) {\n\n        var dd = \"\";\n      }\n      else {\n\n        var dd = aa;\n      }\n      if (company == null) {\n        var c = \"\";\n      }\n      else {\n        var c = company\n      }\n      if (notes == null) {\n        var n = \"\";\n      }\n      else {\n        var n = notes;\n      }\n       if (equipment_id == null) {\n        var equipmentid = \"\";\n        \n      }\n      else {\n        var equipmentid = equipment_id;\n        \n      }\n      frappe.call({\n        method: \"inquiry\",\n        args: {\n          \"request\": request,\n          \"fname\": fname,\n          \"lname\": lname,\n          \"company\": c,\n          \"email\": email,\n          \"mobile\": mobile,\n          \"notes\": n,\n          \"equipment\": dd,\n          \"date\": date,\n          \"watsappno\": d,\n          \"inquiry_source\": inquiry_source,\n          \"inquiry_connect\": id,\n          \"equipmentid\":equipmentid,\n        }\n      }).then(records => {\n                var a = records[\"msg\"]\n                // alert(a)\n                if(a!=\"\"){\n                    frappe.db.set_value('Inquiry Form',nm1,\"status\",\"Close\")\n                    // window.location.reload()\n                }\n      })\n\n    });\n  }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.043364",
  "module": "Migoo CRM",
  "name": "Google Location",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\tdocument.querySelectorAll(\"[data-fieldname='equipment_location']\")[1].id = \"autocomplete\";\n\t\tvar script = document.createElement('script');\n\t\tscript.type = 'text/javascript';\n\t\tscript.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyC_iBGslaXogM6MssBSkRrGKDRQ2YcPD_Q&libraries=places';\n\t\tdocument.head.appendChild(script);\n\t},\n\tequipment_location: function (frm) {\n\t\tvar autocomplete = new google.maps.places.Autocomplete((document.getElementById('autocomplete')), {\n\t\t\ttypes: ['geocode'],\n\t\t});\n\n\t\tgoogle.maps.event.addListener(autocomplete, 'load', function () {\n\t\t\tvar near_place = autocomplete.getPlace();\n\t\t});\n\t},\n\n\tbefore_save: function (frm) {\n\t\tvar places = document.getElementById('autocomplete').value\n\t\tfrm.set_value(\"equipment_location\", places)\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.173612",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Supplier List",
  "script": "frappe.listview_settings['Supplier'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Supplier'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Supplier',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.153584",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Lead List",
  "script": "frappe.listview_settings['Lead'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Lead'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Lead',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.134199",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message For Opportunity",
  "script": "let msg = false;\nlet template = [];\nfrappe.ui.form.on('Opportunity', {\n    refresh(frm) {\n        if(frm.doc.whatsapp){\n            \n            frm.add_custom_button(__(\"Send Whatsapp Message\"), function(){\n            let number = frm.doc.whatsapp;\n            template = [];\n            frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n                      args:{\n                        'doctype': 'Opportunity'\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            for(let i=0; i<r.message.length; i++){\n                                template.push(r.message[i])\n                            }\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n           console.log(\"template\", template)\n            let d = new frappe.ui.Dialog({\n            title: 'Send Message',\n            fields: [\n                {\n                    label: \"Select Message Type\",\n                    fieldname: \"select_message_type\",\n                    fieldtype: \"Select\",\n                    options: [\"Template\", \"Text\"]\n                },\n                {\n                    label: 'Enter Your Message',\n                    fieldname: 'message',\n                    fieldtype: 'Data',\n                    depends_on: \"eval:(doc.select_message_type == 'Text')\"\n                },\n                // {\n                //     label: 'Select Template',\n                //     fieldname: 'select_template',\n                //     fieldtype: 'Link',\n                //     options: 'Templates',\n                //     depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                // }\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n            ],\n            primary_action_label: 'Send',\n            primary_action(values) {\n                    frappe.call({\n                      method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                      args:{\n                          'message': values['message'],\n                          'number': number,\n                          'template_name': values['select_template']\n                      },\n                        freeze: true,\n                        callback: (r) => {\n                            frappe.msgprint('Message Sent');\n                        },\n                        error: (r) => {\n                            frappe.msgprint('somthing want wrong!');\n                        }\n                  });\n                d.hide();\n        }\n    });\n    \n    console.log(\"template1\", template)\n    let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_whatsapp_message',\n                  args:{\n                      'message': values['message'],\n                      'number': number,\n                      'template_name': values['select_template']\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    if(msg === true){\n        d.show();\n    }\n    else{\n        d1.show();\n    }\n    });\n    // var img = document.createElement(\"img\");\n    // img.id=\"image\";\n    // img.src=\"https://migoo.frappe.cloud/files/whatsapp_icon.png\";\n    // img.style=\"height:4vh\";\n\n    // // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].after(img)\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundImage = \"url('https://migoo.frappe.cloud/files/whatsapp_icon.png')\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundSize = \"3vh\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundRepeat = \"no-repeat\";\n    // document.querySelectorAll(\"[data-fieldname='whatsapp']\")[1].style.backgroundPosition = \"right\";\n    \n    frappe.call({\n        method:'whatsapp_app.whatsapp_app.doctype.api.check_status',\n        args:{\n            'number': frm.doc.whatsapp\n        },\n        freeze: true,\n        callback: (r) => {\n            if(r.message === 'yes'){\n                msg = true;\n            }\n            else if(r.message === 'no'){\n                msg = false;\n            }\n        },\n        error: (r) => {\n            console.log(\"somthing wrong\");\n        }\n    });\n}\n        \n        \n    },\n    \n    \nonload_post_render(frm){\n         \n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.144084",
  "module": "Migoo CRM",
  "name": "Send Whatsapp Message From Opportunity List",
  "script": "frappe.listview_settings['Opportunity'].onload = function(listview) {\n    // add button to menu\n    listview.page.add_action_item(__(\"Send Whatsapp Template\"), function() {\n    \ttest( listview );\n});\n};\n\nfunction test( listview )\n{\n\tlet names=[];\n\t$.each(listview.get_checked_items(), function(key, value) {\n\t\tnames.push(value.name);\n\t});\n\tif (names.length === 0) {\n\t\tfrappe.throw(__(\"No rows selected.\"));\n\t}\n    \n    template = [];\n    frappe.call({\n              method:'whatsapp_app.whatsapp_app.doctype.api.get_template_list',\n              args:{\n                'doctype': 'Opportunity'\n              },\n                freeze: true,\n                callback: (r) => {\n                    for(let i=0; i<r.message.length; i++){\n                        template.push(r.message[i])\n                    }\n                    template.append[\"new add\"]\n                },\n                error: (r) => {\n                    frappe.msgprint('somthing want wrong!');\n                }\n          });\n     let d1 = new frappe.ui.Dialog({\n        title: 'Send Message',\n        fields: [\n            {\n                label: \"Select Message Type\",\n                fieldname: \"select_message_type\",\n                fieldtype: \"Select\",\n                options: [\"Template\"]\n                },\n                {\n                    label: 'Select Template',\n                    fieldname: 'select_template',\n                    fieldtype: 'Select',\n                    options: template,\n                    depends_on: \"eval:(doc.select_message_type == 'Template')\"\n                }\n        ],\n        primary_action_label: 'Send',\n        primary_action(values) {\n                frappe.call({\n                  method:'whatsapp_app.whatsapp_app.doctype.api.send_bulk_whatsapp_message',\n                  args:{\n                      'template_name': values['select_template'],\n                      'doctype': 'Opportunity',\n                      'name': names\n                  },\n                    freeze: true,\n                    callback: (r) => {\n                        frappe.msgprint('message sent');\n                    },\n                    error: (r) => {\n                        frappe.msgprint('somthing want wrong!');\n                    }\n              });\n            d1.hide();\n        }\n    \n    });\n    d1.show();\n    \n\tconsole.log(\"asdf\", names);\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.124726",
  "module": "Migoo CRM",
  "name": "Opportunity save",
  "script": "frappe.ui.form.on('Opportunity', {\n\tonload(frm) {\n\t\tif (!frm.is_new()) {\n\t\t  //  alert(\"Save\")\n        //  frm.add_custom_button('Click me', () => console.log('Clicked custom button'))\n        cur.frm.save()\n}\n\n\t}\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Website Item",
  "enabled": 0,
  "modified": "2023-03-14 18:25:31.094632",
  "module": "Migoo CRM",
  "name": "Supplier details fetch",
  "script": "frappe.ui.form.on('Website Item', {\n\tonload:function(frm) {\n\t    var item =cur_frm.doc.item_code;\n\t    alert(item)\n\t    frappe.call({\n\t        method:\"suppler_mo_no\",\n\t        args:{\"item\":item},\n\t    }).then(records => {\n\t\t      //  cur_frm.set_value(\"register_no\",\"\")\n                var name1 = records[\"message\"]\n                var no = records[\"msg\"]\n                cur_frm.set_value(\"supplier_name\",name1)\n                cur_frm.set_value(\"supplier_number\",no)\n\t\t    });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.237610",
  "module": "Migoo CRM",
  "name": "Equipment fetch data button CSS",
  "script": "frappe.ui.form.on('Item', {\n\trefresh(frm) {\n\t\t// your code here\n\t\tvar element = document.querySelectorAll(\".form-section\")[1];\n\t\telement.classList.add(\"section-no\");\n\t\tset_css_1(frm);\n\t}\n})\nfunction set_css_1(frm){\n\tconsole.log(\"set_css\");\n    document.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.backgroundColor = '#0275d8'\n\tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.color = '#fff'\n// \tdocument.querySelectorAll(\"[data-fieldname='fetch_data']\")[1].style.marginTop = '25px'\n\tconsole.log(\"End_set_css\");\n}",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-03-14 18:25:30.967622",
  "module": "Migoo CRM",
  "name": "Prospect and Supplier create",
  "script": "frappe.ui.form.on('Lead', {\n\trefresh(frm) {\n\t        setTimeout(() => {\n\t        console.log(\"View Hide\");\n\t        frm.remove_custom_button('Prospect',\"Create\"); \n\t        frm.remove_custom_button('Add to Prospect', \"Action\");\n\t         },0);  \n\t         \n\t         \t\n\t    cur_frm.set_query(\"equipment_main_category\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\": \"All Equipment Groups\",\n            }\n        };\n    });\n\t    frm.set_query('equipment_sub_category', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'parent_item_group': d.equipment_main_category,\n\t\t\t\t    // \"is_group\": \"1\",\n\t\t\t\t    \n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n   \n\n\n\t\n\tvar a=frm.doc.company_name;\n\t    if(a !=\"\")\n\t    {\n\t        var b =\"Company\";\n\t        var c = frm.doc.company_name;\n\t    }\n\t    else\n\t    {\n\t        \n\t        b=\"Individual\";\n\t    }\n\t   var status=frm.doc.status\n\t   if(status==\"Interested\"){\n\t\tfrm.add_custom_button(__('Create Supplier'), function(){\n    \t\t frappe.new_doc(\"Supplier\", {\n    \t\t \"name_of_suppier\": frm.doc.lead_name,\n    \t\t \"email\":frm.doc.email_id,\n    \t\t \"supplier_type\":b,\n    \t\t \"phone_no\":frm.doc.phone,\n    \t\t \"email_id\":frm.doc.email_id,\n    \t\t \"mobile_number\":frm.doc.mobile_no,\n    \t\t \"whatsapp_number\":frm.doc.whatsapp_no,\n    \t\t \"country\":frm.doc.country,\n    \t\t \"company_name\":c,\n    \t\t \"address_line_1\":frm.doc.address_line_1,\n    \t\t \"address_line_2\":frm.doc.address_line_2,\n    \t\t \"area\":frm.doc.area,\n    \t\t \"postal_code\":frm.doc.postal_code,\n    \t\t \"city\":frm.doc.city,\n    \t\t \"state\":frm.doc.state_name,\n    \t\t });\n    \t\t \n\t\t \n\n\t\t});\n\t   }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.225308",
  "module": "Migoo CRM",
  "name": "Customer Connect With Inquiry Form",
  "script": "frappe.ui.form.on('Customer', {\ronload(frm) {\r    var a=rm.doc.lead_name\r    if(a!=\"\"){\r   frappe.call({\r            method: 'frappe.client.get_value',\r            args: {\r                'doctype': 'Lead',\r                'filters': {'name': frm.doc.lead_name},\r                'fieldname': \"inquiry_connect\"\r            },\r            callback: function(r) {\r               \r                    console.log(r.message);\r                    frm.set_value('inquiry_connect', r.message.inquiry_connect);\r                    alert(frm.doc.inquiry_connect)\r                    // frm.refresh_field(\"your_seed_license_code\");\r                  \r            }\r        });\r    }\r    var b=frm.doc.opportunity_name\r    if(b!=\"\"){\r        frappe.call({\r            method: 'frappe.client.get_value',\r            args: {\r                'doctype': 'Opportunity',\r                'filters': {'name': frm.doc.opportunity_name},\r                'fieldname': \"inquiry_connect\"\r            },\r            callback: function(r) {\r               \r                    console.log(r.message);\r                    frm.set_value('inquiry_connect', r.message.inquiry_connect);\r                    alert(frm.doc.inquiry_connect)\r                    // frm.refresh_field(\"your_seed_license_code\");\r                  \r            }\r        });\r    }\r    }\r \r})\r\r",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Raw Data",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.085057",
  "module": "Migoo CRM",
  "name": "Supplier button in Raw Data",
  "script": "frappe.ui.form.on('Raw Data', {\n        refresh(frm) {\n\n                frm.add_custom_button(__('Supplier'), function () {\n\n                        frappe.new_doc(\"Supplier\",\n                                {\n                                        \"suppliername\": frm.doc.full_name,\n                                        \"address_title\": frm.doc.address_title,\n                                        \"address_line_1\": frm.doc.address_line_1,\n                                        \"address_line_2\": frm.doc.address_line_2,\n                                        \"city\": frm.doc.city,\n                                        \"state\": frm.doc.state,\n                                        \"location\": frm.doc.location,\n                                        \"pincode\": frm.doc.pincode,\n                                        \"mobile_number\": frm.doc.mobile_no,\n                                        \"ph\": frm.doc.phone_2,\n                                        \"whatsapp_no\": frm.doc.whatsapp_no,\n                                        \"email\": frm.doc.email,\n                                        \"website\": frm.doc.website,\n\n                                });\n\n                });\n\n        }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.075479",
  "module": "Migoo CRM",
  "name": "Opportunity Reference",
  "script": "frappe.ui.form.on('Opportunity', {\n\tbefore_save:function(frm){\n\t    if(frm.doc.opportunity_from==\"Lead\")\n\t    {\n\t    var a = frm.doc.party_name\n\t    var b = frm.doc.name\n\t    frappe.call({\n\t\t        method:\"opp_reference\", \n\t\t        args: {'name1':a,\"nm\":b},\n\t\t    }).then(records => {\n                var name1 = records[\"message\"]\n                var len = records[\"len\"]\n                // var nm = records[\"nm\"]\n        // frappe.msgprint(\"palak\")\n                let text = name1;\n                // var abc=nm.split(\",\")\n                var myArray = text.split(\",\");\n                 var child = frm.doc.reference.length\n\t    \n\t           if(child==\"\")\n\t           {\n\t               //alert(\"h\")\n                for(var a = 0;a < len; a++){\n                            var row = frappe.model.add_child(cur_frm.doc, \"Opportunity\", \"reference\");\n                            \n                            row.opportunity_nm = myArray[a]\n                            // row.date = abc[a]\n                            frm.refresh_fields(\"reference\");\n                            \n                }\n                cur_frm.save();\n\t            }\n\n\t\t    });\n\t\t    \n\t    }\n\t    \n\t   \n\t},\n\tvalidate:function(frm) {\n\t   // alert(\"call\")\n\t    var a= cur_frm.doc.opportunity_from\n\t   // alert(a)\n\t    var b= cur_frm.doc.party_name\n\t    if(a==null && b==null){\n\t        alert(\"Enter opportunity_from and party_name\")\n\t        validated=false\n\t    }\n\t    else{\n\t       // alert(\"else\")\n\t    }\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-16 16:55:06.833264",
  "module": "Migoo CRM",
  "name": "Create Supplier Address",
  "script": "frappe.ui.form.on('Supplier', {\n\tafter_save:function(frm) {\n\t\t    var name=cur_frm.doc.name;\n\t       var address_line11 = cur_frm.doc.address_line_1;\n        // var address_line12 = cur_frm.doc.address_line_2;\n        // var area1 = cur_frm.doc.area;\n        var city1 = cur_frm.doc.city;\n        var state1 = cur_frm.doc.state;\n        var postal_code1 = cur_frm.doc.postal_code;\n\t        if (address_line11 == null) {\n            var address_line1 = \"\";\n        }\n        else {\n            address_line1 = address_line11\n        }\n        if (city1 == null) {\n            var city = \"\";\n        }\n        else {\n            city = city1\n        }\n        if (state1 == null) {\n            var state = \"\";\n        }\n        else {\n            state = state1\n        }\n        if (postal_code1 == null) {\n            var postal_code = \"\";\n        }\n        else {\n            postal_code = postal_code1\n        }\n\t        if(address_line1!=null){\n\t            frappe.call({\n    \t\t        method:\"check_address\", \n    \t\t        args: {\"name\":name},\n    \t\t    }).then(records => {\n\t                 var a=records[\"data\"]\n    \t\t        \n    \t\t        \n    \t\t        if (a == \"\") \n                    {\n                       \n                        frappe.call({\n                            method: \"supplier_address\",\n                            args: { \"address_line1\": address_line1, \"city\": city, \"state\": state, \"pincode\": postal_code, \"name\": name,},\n                        });\n                     }\n                    else\n                    {\n                    \n                        frappe.call({\n                            method: \"migoo_crm.code_override.image_update.address_update\",\n                            args: { \"address_line1\": address_line1, \"city\": city, \"state\": state, \"postal_code\": postal_code,  \"name\": name},\n                        }).then(records => {\n                            var a = records[\"msg\"]\n                            location.reload()\n                            \n                        })\n                    }\n    \t\t    })\n\t        }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Resource Planning",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.052945",
  "module": "Migoo CRM",
  "name": "resource planning",
  "script": "frappe.ui.form.on('Resource Planning', {\n// \trefresh(frm) {\n// \t\t// your code here\n// \t},\n\tend_date:function(frm){\n\t  \n\t    \n\t    if(frm.doc.end_date < frm.doc.start_date)\n\t    {\n\t        alert(\"please enter valid date\");\n\t        return false;\n\t    }\n\t    else if(frm.doc.end_date == frm.doc.start_date)\n\t    {\n\t        frm.set_value('total_days',frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date ))\n\t       //alert(\"please enter valid date\");\n\t    }\n\t    else\n\t    {\n\t   //  var totaldays = frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date )\n\t    frm.set_value('total_days',frappe.datetime.get_day_diff(frm.doc.end_date ,frm.doc.start_date ))\n\t   // alert(frm.doc.total_days)\n\t    }\n\t},\n\tsales_order:function(frm){\n\t  \n\t    var order=cur_frm.doc.sales_order;\n\t    frappe.call({\n            method:\"order\",\n            args:{\n                \"name\":order,\n            }\n\t    }).then(records => {\n\t       // alert(r.data)\n\t        var a=records[\"data\"]\n\t       // alert(typeof(a))\n\t        frm.set_query('equipment', function(doc, cdt, cdn) {\n            let d = locals[cdt][cdn];\n            return{\n\t\t\t\tfilters: {\n\t\t\t\t    'item_code': [ 'in',a]\n\t\t\t\t    \n\t\t\t\t}\n            };\n\t    });\n\t    });\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Log Sheet",
  "enabled": 1,
  "modified": "2023-04-20 16:42:33.388937",
  "module": "Migoo CRM",
  "name": "Set Time",
  "script": "frappe.ui.form.on('Log Sheet', { \r before_save:function(frm)\r {\r        var hours=0; \r        var minutes=0; \r        var seconds=0; \r        var w_total_time=0;\r        var working=0;\r        var ideal=0;\r        var BreckDown=0;\r        var t=0\r        var tot1=0.0\r        var w_h = 0;\r        var w_m = 0;\r        var i_h = 0;\r        var i_m = 0;\r        var b_h = 0;\r        var b_m = 0;\r        var w_tot=0.0\r        var i_tot=0.0\r        var b_tot=0.0\r        var cc=0.0\r        $.each(frm.doc.working_details || [], function (i, d) {\r\r        if (d.status==\"Working\")\r        {\r            \r            var hour1 = d.total_time.split(':')[0]; \r            var min1 = d.total_time.split(':')[1]; \r            var w1=0\r            w1=parseInt(hour1)\r            var w2=0\r            w2=parseInt(min1)\r            w_h = w_h + w1 \r            w_m = w_m + w2\r            if(w_m>60){\r                var min= w_m/60\r                \r                w_h = w_h + parseInt(min)\r                var mmm = parseInt(min) * 60\r                w_m= w_m-parseInt(mmm)\r               \r            }\r            w_tot = w_h + \".\"+ w_m\r           \r            frm.set_value(\"total_working_time\",parseFloat(w_tot))\r        }\r        if (d.status==\"Ideal\") \r\r        {\r            \r            \r            var hour1 = d.total_time.split(':')[0]; \r           \r            var min1 = d.total_time.split(':')[1]; \r          \r           \r            var w1=0\r            w1=parseInt(hour1)\r            \r            var w2=0\r            w2=parseInt(min1)\r            i_h = i_h + w1 \r            i_m = i_m + w2\r            if(i_m>60){\r                var min= i_m/60\r               \r                i_h = i_h + parseInt(min)\r                var mmm = parseInt(min) * 60\r                i_m= i_m-parseInt(mmm)\r               \r                \r            }\r            i_tot = i_h + \".\"+ i_m\r            frm.set_value(\"total_ideal_time\",parseFloat(i_tot))\r        }\r        if (d.status==\"Breakdown\")\r        {\r            \r            \r            var hour1 = d.total_time.split(':')[0]; \r           \r            var min1 = d.total_time.split(':')[1]; \r          \r           \r            var w1=0\r            w1=parseInt(hour1)\r            \r            var w2=0\r            w2=parseInt(min1)\r            b_h = b_h + w1 \r            b_m = b_m + w2\r            if(b_m>60){\r                var min= b_m/60\r               \r                b_h = b_h + parseInt(min)\r                var mmm = parseInt(min) * 60\r                b_m= b_m-parseInt(mmm)\r                \r                \r            }\r            b_tot = b_h + \".\"+ b_m\r            frm.set_value(\"total_breckdown_time\",parseFloat(b_tot))\r        }\r        // frm.set_value(\"total_time\",)\r        var total = d.total_km\r        t= t+total\r        frm.set_value(\"total_km\",t)\r     })\r     var aa=frm.doc.total_ideal_time \r     var bb = frm.doc.total_working_time\r     alert(typeof(bb))\r     var cc= parseFloat(aa)+parseFloat(bb)\r    // frm.set_value(\"total_km\",cc)\r    alert(typeof(cc))\r    frm.set_value(\"total_time\",cc)\r }\r});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-04-21 10:19:06.496634",
  "module": "Migoo CRM",
  "name": "Fetch time Sheet",
  "script": "frappe.ui.form.on('Sales Invoice', {\n\trefresh: function (frm) {\n\t    var len1= frm.doc.log_sheet_details.length\n\t    var item=\"\"\n\t   $.each(frm.doc.items || [], function (i, d) {\n\t\t\titem = d.item_name ;\n\t\t})\n\t\tsetTimeout(() => {\n\t\t\tfrm.remove_custom_button('Fetch Timesheet');\n\t\t}, 0.2);\n\n\t\tif (frm.doc.docstatus === 0 && !frm.doc.is_return)\n\t\t{\n\t\t\tfrm.add_custom_button(__(\"Get Log Sheet\"), function () \n\t\t\t{\n\t\t\t\tlet d = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: __(\"Get Log Sheet\"),\n\t\t\t\t\tfields: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"From\"),\n\t\t\t\t\t\t\t\"fieldname\": \"from_time\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"Equipment\"),\n\t\t\t\t\t\t\t\"fieldname\": \"equipment\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\t\t\t\t\"options\": \"Item\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t\t\"default\": item,\n\t\t\t\t\t\t},\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t\t\t\tfieldname: \"col_break_1\",\n\t\t\t\t\t\t},    //         // if (frm.doc.total_working_hours != 0 || frm.doc.total_breakdown_hours!=0 |)\n\t   // }\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"To\"),\n\t\t\t\t\t\t\t\"fieldname\": \"to_time\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Date\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"label\": __(\"Customer\"),\n\t\t\t\t\t\t\t\"fieldname\": \"customer\",\n\t\t\t\t\t\t\t\"fieldtype\": \"Link\",\n\t\t\t\t\t\t\t\"options\": \"Customer\",\n\t\t\t\t\t\t\t\"reqd\": 1,\n\t\t\t\t\t\t\t\"default\": frm.doc.customer\n\t\t\t\t\t\t},\n\n\t\t\t\t\t],\n\t\t\t\t\tprimary_action: function () {\n\t\t\t\t\t\tconst data = d.get_values();\n\t\t\t\t\t\tfrm.events.get_sheet_data(frm, data);\n\t\t\t\t\t\td.hide();\n\n\t\t\t\t\t},\n\n\t\t\t\t\tprimary_action_label: __(\"Get Data\")\n\t\t\t\t});\n\t\t\t\td.show();\n\t\t\t});\n\t\t}\n\t\tvar time = 0.0;\n\t\t$.each(frm.doc.log_sheet_details || [], function (i, d) {\n            time=time+ d.total_working_time\n\t\t}) ; \n\t\t$.each(frm.doc.items || [], function (i, d) {\n\t\t\td.hours = time;\n\t\t})\n\t},\n\t\n\tget_sheet_data(frm, data) {\n\t   // alert(\"check\")\n\t\t frappe.call({\n\t\t\tmethod: \"get_customer_wise_sheet\",\n\t\t\targs: {\n\t\t\t\t\"name\": frm.doc.name,\n\t\t\t\t\"from_time\": data.from_time,\n\t\t\t\t\"to_time\": data.to_time,\n\t\t\t\t\"equipment\": data.equipment,\n\t\t\t\t\"customer\": data.customer,\n\t\t\t}\n\t\t}).then(r => {\n\t\t\twindow.location.reload()\n            // frm.set_value(\"total_working_hours\",0.0)\n            // frm.refresh()\n\t\t\n\t\t});\n\t},\nbefore_save:function(frm){\n\t    \n\t\tvar main_total=0\n\t\tvar main_time=0\n\t\tvar tot_i_time=0\n\t\tvar tot_b_time=0\n\t\tvar total=0.0\n\t\tvar tot_km =0.0\n\t\tvar tot_w_time = 0.0\n// \t\talert(\"Heiiiii....................2\")\n\t\t$.each(frm.doc.log_sheet_details || [], function (i, d) {\n\t\t    tot_i_time = tot_i_time +d.idle_hours\n\t\t\ttot_b_time = tot_b_time +d.breck_down_hours;\n\t\t\ttotal  = total + d.total_hours;\n\t\t\t\n\t\t\ttot_km=tot_km+d.total_kmhr\n\t\t\t\n            tot_w_time=tot_w_time+d.total_working_time\n\t\t\t})\n// \t\t\talert(main_time)\n// \t\t\talert(main_min)\n            frm.set_value(\"total_working_hours\",tot_w_time)\n            frm.set_value(\"total_breakdown_hours\",tot_b_time)\n            frm.set_value(\"total_idle_hours\",tot_i_time)\n            frm.set_value(\"total_hours\",total)\n            frm.set_value(\"total_km\",tot_km)\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.005322",
  "module": "Migoo CRM",
  "name": "verify to set time",
  "script": "frappe.ui.form.on('Supplier', {\n\tverify:function(frm) {\n\t\tif(frm.doc.verify ===\"Verify\")\n\t\t{\n\t\t    frm.set_value('verify_time',frappe.datetime.now_datetime())\n\t\t}\n\t\telse if(frm.doc.verify ===\"Not Verify\")\n\t\t{\n\t\t     frm.set_value('verify_time',\"\")\n\t\t}\n\t\telse if(frm.doc.verify ===\"\")\n\t\t{\n\t\t     frm.set_value('verify_time',\"\")\n\t\t}\n\t},\n\tbefore_save:function(frm)\n\t{\n\t    if(frm.doc.verify ===\"Not Verify\")\n\t\t{\n\t\t    frm.set_value('verify_time',\"\")\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:30.923017",
  "module": "Migoo CRM",
  "name": "equipment verify time",
  "script": "frappe.ui.form.on('Item', {\n\tequipment_verify: function (frm) {\n\t\tif (frm.doc.equipment_verify === \"Verify\") {\n\t\t\tfrm.set_value('verify_time', frappe.datetime.now_datetime())\n\t\t}\n\t\telse if (frm.doc.equipment_verify === \"Not Verify\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t\telse if (frm.doc.equipment_verify === \"\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t},\n\tbefore_save: function (frm) {\n\t\tif (frm.doc.equipment_verify === \"Not Verify\") {\n\t\t\tfrm.set_value('verify_time', \"\")\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Notification Log",
  "enabled": 0,
  "modified": "2023-03-14 18:25:30.932134",
  "module": "Migoo CRM",
  "name": "1st date notification",
  "script": "frappe.ui.form.on('Notification Log', {\n  refresh(frm) {\n    console.log(\"trying to working\");\n    var date = new Date();\n    // console.log(date)\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    // console.log(firstDay)\n    if (date != firstDay){\n      console.log(\"palak\");}\n    //   frappe.new_doc(\"Notification Log\",{\n    // \"subject\": \"Reminder For Create Sales Invoice\",\n    // \"reference_doctype\": \"Sales Invoice\",\n    //   });\n    cur_frm.save();\n  }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-14 18:25:31.257081",
  "module": "Migoo CRM",
  "name": "Verify Status",
  "script": "frappe.ui.form.on('Item', {\n\tbefore_save:function(frm) {\n\t\tif(frappe.user.has_role(\"Vendor\")===true){\n\t\t    if (frm.is_new()) {\n\t\t    frm.set_value(\"equipment_verify\", \"Not Verify\")\n\t\t    }\n\t\t}\n\t\telse{\n\t\t    frm.set_value(\"equipment_verify\", \"Verify\")\n\t\t    frm.set_df_property('supplier', 'reqd', 1)\n\t\t}\n\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-03-20 17:50:58.112871",
  "module": "Migoo CRM",
  "name": "Lead Setting",
  "script": "frappe.ui.form.on('Lead', {\n\tonload:function(frm) {\n    cur_frm.set_query(\"equipment__category\", function() {\n    return {\n            \"filters\": {\n                \"parent_item_group\" : \"All Equipment Groups\",\n            }\n        };\n    });\n    \n    cur_frm.set_query(\"request_type\", function() {\n    return {\n            \"filters\": {\n                \"is_select\" : 1,\n            }\n        };\n    });\n    cur_frm.set_query(\"request_types\", function() {\n    return {\n            \"filters\": {\n                \"is_multi_select\" : 1,\n            }\n        };\n    });\n\t},\n\tequipment__category:function(frm){\n\t    var main=\"\"\n\t   $.each(frm.doc.equipment__category || [], function(i,d){\n\t       if(main==\"\"){\n\t           main=d.item_group_name\n\t       }\n\t       else{\n\t       main =main + \",\"+ d.item_group_name\n\t       }\n\t   })\n\t   console.log(main)\n\t    cur_frm.set_query(\"equipment__sub__category\", function () {\n            return {\n                \"filters\": {\n                    \"parent_item_group\":[\"in\", main],\n                }\n            };\n        });\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Driver",
  "enabled": 1,
  "modified": "2023-02-27 15:47:34.793017",
  "module": "android_app",
  "name": "Driver User",
  "script": "frappe.ui.form.on('Driver', {\n\tandroid_user_(frm) {\n\t   // alert(\"Hello This is Android User\");\n\t    var cell_number = cur_frm.doc.cell_number;\n\t    var email = cell_number+\"@gmail.com\";\n\t\tvar first_name = cur_frm.doc.full_name;\n// \t\tconsole.log(email);\n// \t\tconsole.log(first_name);\n\t\tvar new_password = \"Sanskar\";\n        // var b =\"Hey\";\n\t\tfrappe.call({\n    \t\t        method:\"android_app.apisend.android_user_creation\", \n    \t\t        args: {\"email\":email, \"new_password\":new_password, \"cell_number\":cell_number},\n    \t\t    }).then(records => {\n\t                 var a=records[\"msg\"];\n    \t\t      //   alert(a);\n    \t\t         cur_frm.set_value(\"user\", a);\n    \t\t         cur_frm.save();\n\n\t        });\n\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-04-17 12:54:29.378585",
  "module": "Migoo CRM",
  "name": "Salary hide for the other employees",
  "script": "frappe.ui.form.on('Employee', {\n\trefresh(frm) {\n\t    var a = frappe.session.user\n\t    var b = frm.doc.company_email\n\t    if(a === b){\n\t        frm.set_df_property('ctc', 'hidden', 0);\n\t    }\n\t    else if(frappe.user.has_role(\"HR Manager\"||\"HR User\") === true){\n\t        frm.set_df_property('ctc', 'hidden', 0);\n\t    }\n\t    else{\n\t        frm.set_df_property('ctc', 'hidden', 1);\n\t    }\n\t}\n})",
  "view": "Form"
 }
]